---

- name: Check that the {{ zookeeper_home }}
  stat:
      path: '{{ zookeeper_home }}'
  register: stat_result
 
- name : extract {{ zookeeper_url_file_name }}
  unarchive:
     src: "http://{{ hostvars[groups['repo'][0]]['ansible_host'] }}/download/{{ zookeeper_url_file_name }}"
     dest: /opt
     remote_src: true
     owner: '{{ zookeeper_user }}'
     group: '{{ application_group }}'
  when: not stat_result.stat.exists  

- name: create {{ zookeeper_data_dir }} 
  file: 
     path: '{{ zookeeper_data_dir }}'
     state: directory
     owner: '{{ zookeeper_user }}'
     group: '{{ application_group }}'

- name: create soft link to /opt/spark   
  file:
     src: '/opt/{{ zookeeper_file_name }}'
     dest: '{{ zookeeper_home }}'
     state: link
     owner: '{{ zookeeper_user }}'
     group: '{{ zookeeper_group }}'
  when: not stat_result.stat.exists  

- name: Copy ZooKeeper conf files with correct permissions
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ zookeeper_user }}"
    group: "{{ application_group }}"
    mode: "{{ item.mode }}"
  loop:
    - { src: 'run_zookeeper.sh.j2', dest: '{{ zookeeper_home }}/run_zookeeper.sh', mode: '0755' }
    - { src: 'zoo.cfg.j2', dest: '{{ zookeeper_home }}/conf/zoo.cfg', mode: '0600' }
    - { src: 'myid.j2', dest: '{{ zookeeper_data_dir }}/myid', mode: '0644' }
    - { src: 'zookeeper.service.j2', dest: '/etc/systemd/system/zookeeper.service', mode: '0644' }
  notify: restart zookeeper


- name: Reload service files
  systemd:
    daemon_reload: true  
