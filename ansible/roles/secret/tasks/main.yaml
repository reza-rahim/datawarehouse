- name: create {{ secret_dir }} dir
  file:
     path: '{{ secret_dir }}'
     state: directory
     group: '{{ application_group }}'
     mode: '0755'

- name: Copy decrypt scripts with item-specific group
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    group: "{{ item.group }}"
    mode: '0550'
  loop:
    - { src: 'decrypt_secret_eval.sh.j2', dest: "{{ secret_dir }}/decrypt_secret_eval.sh", group: "{{ application_group }}" }
    - { src: 'min_decrypt_secret_eval.sh.j2', dest: "{{ secret_dir }}/min_decrypt_secret_eval.sh", group: "{{ fuse_group }}" }


- name: create {{ secret_dir }}/{{ secret_file }}
  shell: |
    env_vars=$(cat <<EOF
    export FQDN={{ lookup('env', 'FQDN') }}

    export PGUSER={{ lookup('env', 'PGUSER') }}
    export PGPASSWORD={{ lookup('env', 'PGPASSWORD') }}

    export PGUSER_RO={{ lookup('env', 'PGUSER_RO') }}
    export PGPASSWORD_RO={{ lookup('env', 'PGPASSWORD_RO') }}

    #keycloak
    export KEYCLOAK_ADMIN={{ lookup('env', 'KEYCLOAK_ADMIN') }}
    export KEYCLOAK_ADMIN_PASSWORD={{ lookup('env', 'KEYCLOAK_ADMIN_PASSWORD') }}

    #keycloak id
    export KEYCLOAK_MINIO_ID={{ lookup('env', 'KEYCLOAK_MINIO_ID') }}
    export KEYCLOAK_MINIO_CLIENT_ID={{ lookup('env', 'KEYCLOAK_MINIO_CLIENT_ID') }}
    export KEYCLOAK_MINIO_CLIENT_SECRET={{ lookup('env', 'KEYCLOAK_MINIO_CLIENT_SECRET') }}

    export KEYCLOAK_JUPYTER_ID={{ lookup('env', 'KEYCLOAK_JUPYTER_ID') }}
    export KEYCLOAK_JUPYTER_CLIENT_ID={{ lookup('env', 'KEYCLOAK_JUPYTER_CLIENT_ID') }}
    export KEYCLOAK_JUPYTER_CLIENT_SECRET={{ lookup('env', 'KEYCLOAK_JUPYTER_CLIENT_SECRET') }}

    export KEYCLOAK_TRINO_ID={{ lookup('env', 'KEYCLOAK_TRINO_ID') }}
    export KEYCLOAK_TRINO_CLIENT_ID={{ lookup('env', 'KEYCLOAK_TRINO_CLIENT_ID') }}
    export KEYCLOAK_TRINO_CLIENT_SECRET={{ lookup('env', 'KEYCLOAK_TRINO_CLIENT_SECRET') }}

    export TRINO_SHARED_SECRET={{ lookup('env', 'TRINO_SHARED_SECRET') }}
    export TRINO_USER={{ lookup('env', 'TRINO_USER') }}
    export TRINO_PASSWORD={{ lookup('env', 'TRINO_PASSWORD') }}

    export SUPERSET_ADMIN_USER={{ lookup('env', 'SUPERSET_ADMIN_USER') }}
    export SUPERSET_ADMIN_PASSWORD={{ lookup('env', 'SUPERSET_ADMIN_PASSWORD') }}
    export SUPERSET_ADMIN_EMAIL={{ lookup('env', 'SUPERSET_ADMIN_EMAIL') }}
    export SUPERSET_SECRET_KEY={{ lookup('env', 'SUPERSET_SECRET_KEY') }}

    export KEYCLOAK_SUPERSET_ID={{ lookup('env', 'KEYCLOAK_SUPERSET_ID') }}
    export KEYCLOAK_SUPERSET_CLIENT_ID={{ lookup('env', 'KEYCLOAK_SUPERSET_CLIENT_ID') }}
    export KEYCLOAK_SUPERSET_CLIENT_SECRET={{ lookup('env', 'KEYCLOAK_SUPERSET_CLIENT_SECRET') }}

    export KEYCLOAK_AIRFLOW_ID={{ lookup('env', 'KEYCLOAK_AIRFLOW_ID') }}
    export KEYCLOAK_AIRFLOW_CLIENT_ID={{ lookup('env', 'KEYCLOAK_AIRFLOW_CLIENT_ID') }}
    export KEYCLOAK_AIRFLOW_CLIENT_SECRET={{ lookup('env', 'KEYCLOAK_AIRFLOW_CLIENT_SECRET') }}


    export KEYCLOAK_DEMO_USER={{ lookup('env', 'KEYCLOAK_DEMO_USER') }}
    export KEYCLOAK_DEMO_PASSWORD={{ lookup('env', 'KEYCLOAK_DEMO_PASSWORD') }}

    #minio
    export MINIO_ROOT_USER={{ lookup('env', 'MINIO_ROOT_USER') }}
    export MINIO_ROOT_PASSWORD={{ lookup('env', 'MINIO_ROOT_PASSWORD') }}

    export MINIO_RW_USER={{ lookup('env', 'MINIO_RW_USER') }}
    export MINIO_RW_PASSWORD={{ lookup('env', 'MINIO_RW_PASSWORD') }}

    export MINIO_RO_USER={{ lookup('env', 'MINIO_RO_USER') }}
    export MINIO_RO_PASSWORD={{ lookup('env', 'MINIO_RO_PASSWORD') }}

    export AWS_ACCESS_KEY_ID={{ lookup('env', 'MINIO_RW_USER') }}
    export AWS_SECRET_ACCESS_KEY={{ lookup('env', 'MINIO_RW_PASSWORD') }}

    #airflow
    export AIRFLOW_ADMIN_USERNAME={{ lookup('env', 'AIRFLOW_ADMIN_USERNAME') }}
    export AIRFLOW_ADMIN_PASSWORD={{ lookup('env', 'AIRFLOW_ADMIN_PASSWORD') }}

    #JKS
    export JKS_PASSWORD={{ lookup('env', 'JKS_PASSWORD') }}

    #spark
    export SPARK_UI_USER={{ lookup('env', 'SPARK_UI_USER') }}
    export SPARK_UI_PASSWORD={{ lookup('env', 'SPARK_UI_PASSWORD') }}
    export SPARK_AUTH_SECRET={{ lookup('env', 'SPARK_AUTH_SECRET') }}

    #opensearch
    export OPENSEARCH_INITIAL_ADMIN_PASSWORD={{ lookup('env', 'OPENSEARCH_INITIAL_ADMIN_PASSWORD') }}

    EOF
    )


    echo "$env_vars" | gpg --batch --quiet --yes --passphrase "$({{ passphrase }})" -c > {{ secret_dir }}/{{ secret_file }}
    chmod 0750 {{ secret_dir }}/{{ secret_file }}
    chgrp   {{ application_group }}  {{ secret_dir }}/{{ secret_file }}


    
- name: create {{ secret_dir }}/{{ min_secret_file }}
  shell: |
    env_vars=$(cat <<EOF

    export MINIO_RW_USER={{ lookup('env', 'MINIO_RW_USER') }}
    export MINIO_RW_PASSWORD={{ lookup('env', 'MINIO_RW_PASSWORD') }}

    export MINIO_RO_USER={{ lookup('env', 'MINIO_RO_USER') }}
    export MINIO_RO_PASSWORD={{ lookup('env', 'MINIO_RO_PASSWORD') }}

    export AWS_ACCESS_KEY_ID={{ lookup('env', 'MINIO_RW_USER') }}
    export AWS_SECRET_ACCESS_KEY={{ lookup('env', 'MINIO_RW_PASSWORD') }}
    #JKS
    export JKS_PASSWORD={{ lookup('env', 'JKS_PASSWORD') }}
    export SPARK_AUTH_SECRET={{ lookup('env', 'SPARK_AUTH_SECRET') }}
    EOF
    )

    echo "$env_vars" | gpg --batch --quiet --yes --passphrase "$({{ passphrase }})" -c > {{ secret_dir }}/{{ min_secret_file }}
    chmod 0750 {{ secret_dir }}/{{ min_secret_file }}
    chgrp   {{ fuse_group }}  {{ secret_dir }}/{{ min_secret_file }}


