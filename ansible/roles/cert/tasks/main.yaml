- name: create {{ cert_dir }} dir
  file:
     path: '{{ cert_dir }}'
     state: directory

- name: copy  cert files
  template: src='{{ item.src }}' dest='{{ item.dest }}' group='{{ application_group }}'  mode=0640
  loop:
     - { src: '{{ server_cert_file_name }}', dest: '{{ cert_dir }}/{{ server_cert_file_name }}'  }
     - { src: '{{ server_key_file_name }}', dest: '{{ cert_dir }}/{{ server_key_file_name }}'  }
     - { src: '{{ server_cert_key_file_name }}', dest: '{{ cert_dir }}/{{ server_cert_key_file_name }}'  }
   
- name: copy  cert files for minio
  template: src='{{ item.src }}' dest='{{ item.dest }}' group='{{ application_group }}'  mode=0640       
  loop:
     - { src: '{{ server_cert_file_name }}', dest: '{{ minio_home }}/.minio/certs/public.crt'  }
     - { src: '{{ server_key_file_name }}', dest: '{{ minio_home }}/.minio/certs/private.key'  }
  when: 's3_protocol== "https"'    

- name: copy  {{ ca_cert_file_name }} to /usr/local/share/ca-certificates/
  template: src='{{ item.src }}' dest='{{ item.dest }}'
  loop:
     - { src: '{{ ca_cert_file_name }}', dest: '/usr/local/share/ca-certificates/{{ ca_cert_file_name }}' }
   #notify: run certificates

- name:  run /usr/sbin/update-ca-certificates
  shell: /usr/sbin/update-ca-certificates

- name: Check if 'CA cert' cert already exists
  command: keytool -list -keystore /etc/ssl/certs/java/cacerts -storepass changeit -alias CA_Cert
  register: keycloak_cert_check
  ignore_errors: yes
  changed_when: false

- name: Add the cert to Java truststore if not present
  shell: |
    yes | keytool -import -trustcacerts -alias CA_Cert \
    -file /usr/local/share/ca-certificates/CA_cert.crt \
    -keystore /etc/ssl/certs/java/cacerts \
    -storepass changeit
  when: keycloak_cert_check.rc != 0
  args:
    executable: /bin/bash

