#!/bin/bash

/opt/keycloak/bin/kcadm.sh config credentials  --server https://keyclock.{{ lookup('env', 'FQDN') }}:6443/ --realm master --user {{ Keycloak_admin }} --password $KEYCLOAK_ADMIN_PASSWORD

## create realms
/opt/keycloak/bin/kcadm.sh  create realms -s realm={{ keycloak_realms_devel }}  -s enabled=true
/opt/keycloak/bin/kcadm.sh  create realms -s realm={{ keycloak_realms_bi }} -s enabled=true

#### users
/opt/keycloak/bin/kcadm.sh create users -r {{ keycloak_realms_devel }}  -s username={{ keycloak_devel_user }} -s enabled=true
/opt/keycloak/bin/kcadm.sh create users -r {{ keycloak_realms_bi }}  -s username={{ keycloak_bi_user }} -s enabled=true


### create password
/opt/keycloak/bin/kcadm.sh set-password -r  {{ keycloak_realms_devel }} --username {{ keycloak_devel_user }}  --new-password "$KEYCLOAK_BI_PASSWORD"
/opt/keycloak/bin/kcadm.sh set-password -r  {{ keycloak_realms_bi }} --username {{ keycloak_devel_user }}   --new-password  "$KEYCLOAK_DEVEL_PASSWORD"

/opt/keycloak/bin/kcadm.sh create clients -r {{ keycloak_realms_bi }} -f - << EOF
{
  "clientId": "{{ keycloak_trino_client_id }}",
  "id": "{{ keycloak_trino_id }}",
  "secret": "{{ keycloak_trino_client_secret }}",
  "enabled": true,
  "clientAuthenticatorType": "client-secret",
  "redirectUris": [ "https://trino.{{ lookup('env', 'FQDN') }}:{{ trino_tls_port }}/*" ],
  "webOrigins": [ "*" ],
  "standardFlowEnabled": true,
  "directAccessGrantsEnabled": true,
  "protocol": "openid-connect",
  "access": { "view": true, "configure": true, "manage": true },
  "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "email" ],
  "optionalClientScopes": [ "address", "phone", "offline_access", "microprofile-jwt" ]
}
EOF

/opt/keycloak/bin/kcadm.sh create clients -r {{ keycloak_realms_bi }} -f - << EOF
{
  "clientId": "{{ keycloak_superset_client_id }}",
  "id": "{{ keycloak_superset_id }}",
  "secret": "{{ keycloak_superset_client_secret }}",
  "enabled": true,
  "clientAuthenticatorType": "client-secret",
  "redirectUris": [ "https://superset.{{ lookup('env', 'FQDN') }}:{{ superset_port }}/*" ],
  "webOrigins": [ "*" ],
  "standardFlowEnabled": true,
  "directAccessGrantsEnabled": true,
  "protocol": "openid-connect",
  "access": { "view": true, "configure": true, "manage": true },
  "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "email" ],
  "optionalClientScopes": [ "address", "phone", "offline_access", "microprofile-jwt" ]
}
EOF


/opt/keycloak/bin/kcadm.sh create clients -r {{ keycloak_realms_devel }} -f - << EOF
{
  "clientId": "{{ keycloak_jupyter_client_id }}",
  "id": "{{ keycloak_jupyter_id }}",
  "secret": "{{ keycloak_jupyter_client_secret }}",
  "enabled": true,
  "clientAuthenticatorType": "client-secret",
  "redirectUris": [ "https://jupyterhub.{{ lookup('env', 'FQDN') }}:{{ jupyterhub_port }}/*" ],
  "webOrigins": [ "*" ],
  "standardFlowEnabled": true,
  "directAccessGrantsEnabled": true,
  "protocol": "openid-connect",
  "access": { "view": true, "configure": true, "manage": true },
  "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "email" ],
  "optionalClientScopes": [ "address", "phone", "offline_access", "microprofile-jwt" ]
}
EOF

/opt/keycloak/bin/kcadm.sh create clients -r {{ keycloak_realms_devel }} -f - << EOF
{
  "clientId": "{{ keycloak_minio_client_id  }}",
  "id": "{{ keycloak_minio_id }}",
  "secret": "{{ keycloak_minio_client_secret }}",
  "enabled": true,
  "clientAuthenticatorType": "client-secret",
  "redirectUris": [ "https://minio.{{ lookup('env', 'FQDN') }}:9001/*" ],
  "webOrigins": [ "*" ],
  "standardFlowEnabled": true,
  "directAccessGrantsEnabled": true,
  "protocol": "openid-connect",
  "access": { "view": true, "configure": true, "manage": true },
  "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "email" ],
  "optionalClientScopes": [ "address", "phone", "offline_access", "microprofile-jwt" ]
}
EOF

/opt/keycloak/bin/kcadm.sh create clients -r {{ keycloak_realms_devel }} -f - << EOF
{
  "clientId": "{{ keycloak_airflow_client_id }}",
  "id": "{{ keycloak_airflow_id }}",
  "secret": "{{ keycloak_airflow_client_secret }}",
  "enabled": true,
  "clientAuthenticatorType": "client-secret",
  "redirectUris": [ "https://airflow.{{ lookup('env', 'FQDN') }}:{{ airflow_port }}/*" ],
  "webOrigins": [ "*" ],
  "standardFlowEnabled": true,
  "directAccessGrantsEnabled": true,
  "protocol": "openid-connect",
  "access": { "view": true, "configure": true, "manage": true },
  "defaultClientScopes": [ "web-origins", "acr", "roles", "profile", "email" ],
  "optionalClientScopes": [ "address", "phone", "offline_access", "microprofile-jwt" ]
}
EOF

